# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- pre-build
- build
- container-build
- test
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup
variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true
    -DdeployAtEnd=true"
build_lib:
  image: maven:3.8.4-eclipse-temurin-16
  stage: pre-build
  artifacts:
    untracked: false
    expire_in: 1 hrs
    paths:
    - ".m2/repository"
  script:
  - cd lib && mvn clean install
install_npm_dependencies:
  image: node:14-alpine
  stage: pre-build
  artifacts:
    untracked: false
    expire_in: 1 hrs
    paths:
    - api/node_modules
  script:
  - cd api && npm i
build_spigot:
  image: maven:3.8.4-eclipse-temurin-16
  stage: build
  needs:
  - build_lib
  artifacts:
    untracked: false
    expire_in: 1 hrs
    paths:
    - spigot/target/*.jar
  script:
  - cd spigot && mvn clean package
build_velocity:
  image: maven:3.8.4-eclipse-temurin-16
  stage: build
  needs:
  - build_lib
  artifacts:
    untracked: false
    expire_in: 1 hrs
    paths:
    - velocity/target/*.jar
  script:
  - cd velocity && mvn clean package
build_api:
  image: node:14-alpine
  stage: build
  needs:
  - install_npm_dependencies
  artifacts:
    untracked: false
    expire_in: 1 hrs
    paths:
    - api/index.js
    - api/dist
  script:
  - cd api && npm run build
build_api_container:
  stage: container-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
    - ''
  needs:
  - install_npm_dependencies
  - build_api
  script:
  - mkdir -p /kaniko/.docker
  - echo "{\"auths\":{\"registry01.eps-dev.de\":{\"auth\":\"$(printf "%s:%s" "${PRIVATE_REG_USER}"
    "${PRIVATE_REG_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  - /kaniko/executor --context "${CI_PROJECT_DIR}/api" --dockerfile "${CI_PROJECT_DIR}/api/Dockerfile"
    --destination "registry01.eps-dev.de/velocitymanager/api/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}"
    --destination "registry01.eps-dev.de/velocitymanager/api/${CI_COMMIT_REF_SLUG}:latest"
sast:
  stage: test
include:
- template: Auto-DevOps.gitlab-ci.yml
